name: Move Card to Column

on:
  pull_request:
    types: [labeled]
  workflow_dispatch:

jobs:
  move-to-column:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install @octokit/rest

    - name: Move card to column
      uses: actions/github-script@v5
      with:
        script: |
          const { Octokit } = require("@octokit/rest");

          const octokit = new Octokit({
            auth: process.env.GITHUB_TOKEN
          });

          const columnToMoveTo = "Draft not updated";
          const labelToTriggerMove = "No activity";

          async function handleLabeledEvent(event) {
            const { label, issue } = event.payload;
            const issueId = issue.id;
            const repoName = event.repo.name;
            const ownerName = event.repo.owner.login;

            // Check if the labeled event corresponds to the label that triggers the move
            if (label.name === labelToTriggerMove) {
              // Get the project board for the repository
              const projects = await octokit.projects.listForRepo({
                owner: ownerName,
                repo: repoName
              });

              // Get the columns for the first project board
              const columns = await octokit.projects.listColumns({
                project_id: projects.data[0].id
              });

              // Find the column to move the card to
              const columnToMoveToId = columns.data.find(column => column.name === columnToMoveTo).id;

              // Get the issue's card
              const cards = await octokit.projects.listCards({
                column_id: columns.data[0].id
              });

              const card = cards.data.find(card => card.content_url.includes(`/${issueId}`));

              // Move the card to the desired column
              await octokit.projects.moveCard({
                card_id: card.id,
                position: "top",
                column_id: columnToMoveToId
              });
            }
          }

          await handleLabeledEvent(github.context);
